"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[819],{9016:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(412);function o(){if(a.Z.canUseDOM)return n(4576).O}},2180:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return A},default:function(){return S},frontMatter:function(){return C},metadata:function(){return P},toc:function(){return N}});var a=n(7462),o=n(3366),r=n(7294),i=n(3905),l=n(4100),c=n(1059),s=n(9016),m=n(1736),u=n(1119),d=(0,s.Z)();function p(){var e=(0,r.useState)([]),t=e[0],n=e[1],a=(0,c.AO)({direction:"horizontal"});return(0,r.useEffect)((function(){fetch("/data/nmr-1h.jdx").then((function(e){e.text().then((function(e){var t=(0,l.G0)(d(e).flatten[0].spectra[0].data);n(t)}))}))}),[]),r.createElement("div",null,r.createElement(c.XN,{width:800,height:300},r.createElement(c.eh,{data:t,xAxis:"x",yAxis:"y"}),r.createElement(c.RD,{id:"x",position:"bottom",label:"Chemical shift (\ud835\udec5)",displayPrimaryGridLines:!0,flip:!0}),r.createElement(c.RD,{position:"left",hidden:!0,paddingStart:.03}),r.createElement(c.uN,null,a.annotations)))}var f="import React from 'react';\nimport { xyToXYObject } from 'ml-spectra-processing';\nimport { useEffect, useState } from 'react';\nimport {\n  Annotations,\n  Axis,\n  LineSeries,\n  Plot,\n  PlotController,\n  SeriesPoint,\n  useAxisZoom,\n} from 'react-plot';\nimport getConvertJcamp from '../../src/util/getConvertJcamp';\nconst convertJcamp = getConvertJcamp();\n\nfunction ZoomablePlot() {\n  const [data, setData] = useState<SeriesPoint[]>([]);\n  const zoom = useAxisZoom({ direction: 'horizontal' });\n\n  useEffect(() => {\n    fetch('/data/nmr-1h.jdx').then((response) => {\n      response.text().then((jcamp) => {\n        const data = xyToXYObject(\n          convertJcamp(jcamp).flatten[0].spectra[0].data,\n        );\n        setData(data);\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Plot width={800} height={300}>\n        <LineSeries data={data} xAxis=\"x\" yAxis=\"y\" />\n        <Axis\n          id=\"x\"\n          position=\"bottom\"\n          label=\"Chemical shift (\ud835\udec5)\"\n          displayPrimaryGridLines\n          flip={true}\n        />\n        <Axis position=\"left\" hidden={true} paddingStart={0.03} />\n        <Annotations>{zoom.annotations}</Annotations>\n      </Plot>\n    </div>\n  );\n}\n\nexport default function NMR1HPlot() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",x=function(){return r.createElement(c.aE,null,r.createElement(p,null))};function h(){var e=(0,r.useState)(!1),t=e[0],n=e[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(x,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return n((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),r.createElement(u.Z,{name:"nmr1-h-plot",source:f,dependencies:{react:"^17.0.2","ml-spectra-processing":"^9.1.0","react-plot":"^0.16.0"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(m.Z,{className:"language-jsx"},f))}function v(){var e=(0,r.useState)(),t=e[0],n=e[1],a=(0,c.AO)({direction:"horizontal"});return(0,r.useEffect)((function(){fetch("/data/nmr-13c.jdx").then((function(e){e.text().then((function(e){var t=(0,l.G0)((0,s.Z)()(e).flatten[0].spectra[0].data);n(t)}))}))}),[]),r.createElement("div",null,t?r.createElement(c.XN,{width:800,height:300},r.createElement(c.eh,{data:t,xAxis:"x",yAxis:"y"}),r.createElement(c.RD,{id:"x",position:"bottom",label:"Chemical shift (\ud835\udec5)",displayPrimaryGridLines:!0,flip:!0}),r.createElement(c.RD,{position:"left",hidden:!0,paddingStart:.03}),r.createElement(c.uN,null,a.annotations)):void 0)}var E="import { xyToXYObject } from 'ml-spectra-processing';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Annotations,\n  Axis,\n  LineSeries,\n  Plot,\n  PlotController,\n  SeriesPoint,\n  useAxisZoom,\n} from 'react-plot';\nimport getConvertJcamp from '../../src/util/getConvertJcamp';\n\nfunction ZoomablePlot() {\n  const [data, setData] = useState<SeriesPoint[]>();\n  const zoom = useAxisZoom({ direction: 'horizontal' });\n  useEffect(() => {\n    fetch('/data/nmr-13c.jdx').then((response) => {\n      response.text().then((jcamp) => {\n        const data = xyToXYObject(\n          getConvertJcamp()(jcamp).flatten[0].spectra[0].data,\n        );\n        setData(data);\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      {data ? (\n        <Plot width={800} height={300}>\n          <LineSeries data={data} xAxis=\"x\" yAxis=\"y\" />\n          <Axis\n            id=\"x\"\n            position=\"bottom\"\n            label=\"Chemical shift (\ud835\udec5)\"\n            displayPrimaryGridLines\n            flip={true}\n          />\n          <Axis position=\"left\" hidden={true} paddingStart={0.03} />\n          <Annotations>{zoom.annotations}</Annotations>\n        </Plot>\n      ) : undefined}\n    </div>\n  );\n}\n\nexport default function NMR13CPlot() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",b=function(){return r.createElement(c.aE,null,r.createElement(v,null))};function g(){var e=(0,r.useState)(!1),t=e[0],n=e[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(b,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return n((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),r.createElement(u.Z,{name:"nmr13-c-plot",source:E,dependencies:{"ml-spectra-processing":"^9.1.0",react:"^17.0.2","react-plot":"^0.16.0"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(m.Z,{className:"language-jsx"},E))}var y=["components"],C={},A="NMR spectra",P={unversionedId:"experimental/nmr",id:"experimental/nmr",title:"NMR spectra",description:"Example of code loading and converting a jcamp (using jcampconverter)",source:"@site/docs/500_experimental/nmr.md",sourceDirName:"500_experimental",slug:"/experimental/nmr",permalink:"/experimental/nmr",editUrl:"https://github.com/zakodium/react-plot-docs/tree/main/docs/500_experimental/nmr.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mass spectrum",permalink:"/experimental/mass"},next:{title:"Fetch",permalink:"/documentation/fetch"}},N=[{value:"<sup>1</sup>H NMR",id:"1h-nmr",children:[],level:2},{value:"<sup>13</sup>C NMR",id:"13c-nmr",children:[],level:2}],k={toc:N};function S(e){var t=e.components,n=(0,o.Z)(e,y);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nmr-spectra"},"NMR spectra"),(0,i.kt)("p",null,"Example of code loading and converting a jcamp (using ",(0,i.kt)("inlineCode",{parentName:"p"},"jcampconverter"),")"),(0,i.kt)("h2",{id:"1h-nmr"},(0,i.kt)("sup",null,"1"),"H NMR"),(0,i.kt)(h,{mdxType:"NMR1HDemo"}),(0,i.kt)("h2",{id:"13c-nmr"},(0,i.kt)("sup",null,"13"),"C NMR"),(0,i.kt)(g,{mdxType:"NMR13CDemo"}))}S.isMDXComponent=!0}}]);